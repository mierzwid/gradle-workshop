/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

// Based on https://kotlinlang.org/docs/reference/

println("Hello World!")

System.out.println("Using Java Libs")

// mutability: https://kotlinlang.org/docs/reference/basic-syntax.html#defining-variables

val immutable = "immutable value" // immutable = "new value" - won't compile
var mutable = "mutable"
mutable = "new value"
println("Printing values: $immutable, $mutable")

// nullable types: https://kotlinlang.org/docs/reference/basic-syntax.html#using-nullable-values-and-checking-for-null

val nullableString: String? = null
val string: String = nullableString ?: "default value"
println("Printing nullable type: ${nullableString ?: "default value"}")

// Functions and return statement: https://kotlinlang.org/docs/reference/functions.html#functions
fun sayHelloWorld() {
    println("Function Hello World")
}

sayHelloWorld()

fun createMessage() { // in functions we need to return result explicitly
    "Last expression is returned from a function"
}
println(createMessage()) // kotlin.Unit

val createMessageLambda = {
    // last expression in lambda is returned
    "Last expression is returned from a function"
}

println(createMessageLambda()) // Last expression is returned from a lambda

// Classes and Objects: https://kotlinlang.org/docs/reference/classes.html#classes-and-inheritance
class AEM(val company: String, val version: String) {  // final by default
    fun fullName() = "AEM ${aem.version} made by ${aem.company}" // short notation -> return type inferred
}
val aem = AEM("Adobe", "6.5") // new keyword omitted

println(aem.fullName()) // props are public by default

// Lambdas: https://kotlinlang.org/docs/reference/lambdas.html

val echoIt: (Any) -> Unit = {
    // need to specify type explicitly since it cannot be inferred otherwise
    println("Echoing it: $it")
}
echoIt(true)

// Extention functions: https://kotlinlang.org/docs/reference/extensions.html#extension-functions
fun AEM.prettyName() {
    println("Pretty: AEM $version made by $company")
}

aem.prettyName()

// Function literals with receiver: https://kotlinlang.org/docs/reference/lambdas.html#function-literals-with-receiver

class Plugin(var name: String = "Fast Plugin", var timeout: Long = 100L) {
    fun doTheJob() {
        println("$name work started!")
        Thread.sleep(timeout)
        println("$name work done!")
    }
}

val plugin = Plugin()

plugin.doTheJob()

fun pluginDsl(configurer: Plugin.() -> Unit) {
    plugin.apply(configurer)
}

pluginDsl {
    name = "Slow plugin"
    timeout = 5000L
}

plugin.doTheJob()
