/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

println "Hello World!"

System.out.println "Using Java Libs"

// Functions and return statement
def sayHelloWorld() {
    println "Function Hello World"
}

sayHelloWorld()

def createMessage() {
    "Last expression is returned from a function"
}

println createMessage()

// Objects
class AEM {

    String company
    
    String version

    AEM (company, version){
        this.company = company
        this.version = version
    }
}

def aem = new AEM("Adobe", "6.5")

println "AEM $aem.version made by $aem.company"

// Closures

def echoIt = {
    println "Echoing it: $it"
}
echoIt(true)

def echoParameter = { parameter ->
    println "Echoing parameter: $parameter"
}
echoParameter(true)

// Passing closures

def oneArgMethod(closure) {
    closure() * 2
}

println "One arg method: ${oneArgMethod { 4 }}"

def twoArgMethod(factor, closure) {
    closure() * factor
} 

println "One arg method: ${twoArgMethod(3) { 4 }}"

[1, 2, 3, 4, 5].each { param -> 
    println oneArgMethod { param }
}

// Closure context

class Obj {
    String prop = "prop value"
    String name = "Obj name"

    Closure printer = {
        println "Prop value: $name"
    }
}

def obj = new Obj()
obj.printer() //Prop value: prop value
obj.printer = { println "Prop value: $name" } // context of a build file
obj.printer() //gradle-workshop 

def variable = "A"

def echoVariable = {
    println "Variable value: $variable"
}

variable = "B"

echoVariable()

// setting closure context (delegate)

class ContextObj {
    String prop = "prop value"
    String name = "Obj name"

    def executeInside(closure) {
        closure.delegate = this
        closure()
    }
}

def context = new ContextObj()

context.executeInside { println "My prop: $prop" }
context.executeInside { println "My name: $name" }
